name: Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: windows-latest
    permissions:
      contents: read
      deployments: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: pwsh
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $env:GITHUB_ENV

      - name: Cache pnpm dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test

      - name: Load environment variables
        run: |
          Get-Content .env.shared | Select-String -Pattern '^\[shared\]' -Context 0,10 | ForEach-Object { $_.Context.PostContext } | ForEach-Object { $_ -replace '^(\w+)=(.*)$', '$1=$2' } | Out-File -FilePath $env:GITHUB_ENV -Append

      # Preview deployment (automatic on main)
      - name: Build Preview
        if: github.ref == 'refs/heads/main'
        run: pnpm build
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          D1_DATABASE_ID: ${{ secrets.PREVIEW_D1_DATABASE_ID }}

      - name: Deploy to Preview
        if: github.ref == 'refs/heads/main'
        run: pnpm deploy:preview
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          D1_DATABASE_ID: ${{ secrets.PREVIEW_D1_DATABASE_ID }}

  # Production deployment (requires approval)
  deploy-production:
    needs: deploy
    runs-on: windows-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: https://shop-dawg-microfeed.pages.dev
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Production
        run: pnpm build
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          D1_DATABASE_ID: ${{ secrets.PRODUCTION_D1_DATABASE_ID }}

      - name: Deploy to Production
        run: pnpm deploy:prod
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          D1_DATABASE_ID: ${{ secrets.PRODUCTION_D1_DATABASE_ID }}
